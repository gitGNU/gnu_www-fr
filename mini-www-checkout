#!/bin/bash

# Language-selective checkout from the www repository
# for use with the Make and the site GNUmakefile


# This script checks out the files required by Make (+ the site GNUmakefile)
# to generate HTML pages from POs for a specific language. It is intended
# for translators who would like to install GNUN locally. To use
# batch-transvalidate instead, a “micro-www” checkout would be sufficient.

# Method:
# 1. A list of the potentially useful files is obtained from a dry run of
#    rsync on the CVS repository, exluding irrelevant directories and
#    keeping only files with the proper extensions.
# 2. The rsync list is further processed, to build a checkout list
#    containing the language-specific POs and corresponding POTs, translists
#    and original HTMLs.
# 3. The files required by Make to generate translated pages are added to
#    the checkout list.
# 4. The listed files are downloaded by cvs (anonymous checkout).
# 5. The “LINGUAS” lines of gnun.mk are edited to remove all language codes
#    except the specified one.
# 6. Links to GNUmakefile and config.mk are added into www/server/gnun/ if
#    GNUN is installed.

# The options and current parameters are displayed by:
#      mini-www-checkout -h

############################################################################

# Copyright (C) 2013 Free Software Foundation, Inc.

# This file is part of GNUnited Nations.

# GNUnited Nations is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# GNUnited Nations is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNUnited Nations.  If not, see <http://www.gnu.org/licenses/>.

############################################################################

function version () {
cat <<EOF
mini-www-checkout (GNUnited Nations) 0.7
Copyright (C) 2013 Free Software Foundation, Inc.
You may redistribute copies of GNUnited Nations
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING.
EOF
}

params=$#
dir=$HOME/GNU
lang=

set -e
set -o pipefail

# Set the parameters from the profile, if present.
if [ -f $HOME/.config/gnun/profile ]; then
  source $HOME/.config/gnun/profile
fi

function usage () {
cat <<EOF

Usage: mini-www-checkout OPTIONS

Options and current settings:

  -d, --dir=/DIREC/TORY                 [$dir]
      Specify the absolute path to the top directory of www (required)

  -l, --lang=CODE                       [$lang]
      Specify the language code (required)

  -V, --version                         Display version info and exit

  -h, --help                            Display this help and exit

The parameters can be specified in a configuration file:
      $HOME/.config/gnun/profile
One line per parameter, with syntax: param="VALUE"

Report bugs to bug-gnun@gnu.org
GNUnited Nations home page: <http://www.gnu.org/software/gnun/>
General help using GNU software: <http://www.gnu.org/gethelp/>
EOF
}

# Parse the command line.
while [ ${params} -ge 1 ]; do
  case "$1" in
     -h | --help )
    usage
    exit 0
    ;;
     -V | --version )
    version
    exit 0
    ;;
     -d | --dir )
    shift
    params=$((${params}-1))
    dir="$1"
    ;;
     --dir=* )
    dir="${1#--dir=}"
    ;;
     -l | --lang )
    shift
    params=$((${params}-1))
    lang="$1"
    ;;
     --lang=* )
    lang="${1#--lang=}"
    ;;
     * )
    break
    ;;
  esac
  params=$((${params}-1))
  shift
done

if [ ${params} -ne 0 ]; then
  echo 1>&2 "*** Unrecognized option “$1”.  See --help for details."
  exit 1
fi

if [ ! -d "${dir}" ]; then
  echo 1>&2 "*** Error: Directory “$dir” doesn't exist."
  exit 1
fi

if [ -z "$lang" ]; then
  echo  1>&2 "*** Error: No language code was specified. Please enter it in
    the command line or in $HOME/.config/gnun/profile."
  exit 1
fi

# Create temporary files.
TMP1=$(mktemp -t ckout.XXXXXX) || exit 1  # rsync output
TMP2=$(mktemp -t ckout.XXXXXX) || exit 1  # selected POs
TMP3=$(mktemp -t ckout.XXXXXX) || exit 1  # checkout list (unverified)
TMP4=$(mktemp -t ckout.XXXXXX) || exit 1  # translated includes
TMP5=$(mktemp -t ckout.XXXXXX) || exit 1  # checkout list (verified)
trap 'rm -f "$TMP1" "$TMP2" "$TMP3" "$TMP4" "$TMP5"' EXIT

cd $dir
if [ -d "www" ]; then
  mv www www.bak
fi

# List the files in the www repository with a dry run of rsync, excluding
# some irrelevant directories and files. The destination directory is
# specified to avoid listing the file attributes, but it is not created.
rsync -anv --exclude "Attic" \
           --exclude "server/source/" \
           --exclude "server/staging/" \
           --include "software/po/" \
           --exclude "software/*/" \
           --exclude "www/www*/" \
           --include "server/gnun/generic.$lang.html,v" \
           --exclude "server/gnun/generic*" \
           --include "*.$lang.po,v" \
           --include "*.translist,v" \
           --include "*.html,v" \
           --include "*.pot,v" \
           --include "*.pot.opt,v" \
           --include "*.txt,v" \
           --include "*.mk,v" \
           --include "*/" \
           --exclude "*" \
           --prune-empty-dirs \
  rsync://cvs.sv.gnu.org/web/www/www www-cvs/ >> $TMP1

# Weed out the rsync messages and the directories, and remove the “,v”
# extension.
sed -i -e '/^www/!d' \
       -e '/\/$/d' \
       -e 's:,v$::' $TMP1

# Select the POs for the specified language.
sed -n "/\\.$lang\\.po/p" $TMP1 >> $TMP2

# Add the corresponding POTs, translists and original HTMLs, except HTMLs at
# the root of server/ because they will be added later on.
sed "s:po/\\([^/]*\\)\\.$lang\\.po$:\\1.html:" $TMP2 |
sed '/\/server\/[^/]*$/d' >> $TMP3                  # HTMLs, except in server/
sed "s:\\.$lang\\.po:\\.pot:" $TMP2 >> $TMP3        # POTs
sed "s:\\.$lang\.po:\\.translist:" $TMP2 >> $TMP3   # translists
cat $TMP2 >> $TMP3                                  # POs

# Add the files in /server/gnun.
grep "/server/gnun/" $TMP1 >> $TMP3

# Add the includes for the specified language and the corresponding
# originals (+ a few articles which happen to be at the root of server/).
sed -n "/server\\/[^/]*\\.$lang\\.html$/p" $TMP1 >> $TMP4
sed "s,$lang\\.html$,html," $TMP4 >> $TMP3
cat $TMP4 >> $TMP3
echo "www/server/include-file-list.txt" >> $TMP3

# Add the optional templates.
echo "www/planetfeeds.html
www/po/planetfeeds.pot.opt
www/planetfeeds.$lang.html
www/software/allgnupkgs.html
www/software/po/allgnupkgs.pot.opt
www/software/po/allgnupkgs.$lang.html
www/software/recent-releases-include.html
www/software/po/recent-releases-include.pot.opt
www/software/recent-releases-include.$lang.html" >> $TMP3

# Check that all the listed files exist (some POs don't have corresponding
# POTs and/or HTMLs).
while read f; do
  grep "$f" $TMP1 >> $TMP5 || true
done < $TMP3

# Checkout the listed files.
if [ -s $TMP5 ]; then
  cvs -z3  -d:pserver:anonymous@cvs.savannah.gnu.org:/webcvs/www \
      co $(< $TMP5)
else
  echo "*** There is no file in the checkout list."
  exit 1
fi

# Edit the “*-LINGUAS” lines of gnun.mk to leave only the specified
# language, otherwise, GNUN will complain that generic.lang.html is missing.
sed -i -e '/LINGUAS.*\\$/ {N; s,\n,,}' \
       -e "s,LINGUAS := .*$,LINGUAS := $lang," www/server/gnun/gnun.mk

# Find out where GNUN is installed, then add links to GNUmakefile and
# config.mk into www/server/gnun/.
if [ -n "$(which gnun-report)" ]; then
  path=$(dirname $(which gnun-report))
  installdir=${path%/*}
  if [ -f $installdir/share/gnun/GNUmakefile ] \
  &&  [ -f $installdir/share/gnun/config.mk ]; then
    ln -s $installdir/share/gnun/GNUmakefile www/server/gnun/
    ln -s $installdir/share/gnun/config.mk www/server/gnun/
  else
    echo "*** GNUmakefile and/or config.mk were not found. You should
    check your GNUN installation."
  fi
else
  echo "*** The www directory is installed but can't be used to generate
    HTMLs, because GNUmakefile and config.mk are missing. You
    should install GNUN and add links to those files (often found in
    /usr/local/share/gnun or /usr/share/gnun) into $dir/www/server/gnun/."
fi

exit
